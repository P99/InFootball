div(style={width: "400px"})
  div#templates

script
  | var socket = io( document.location.hostname + ':' + port + '/operator' );
  | $( "#templates" ).jtable({
  |   title: "Games",
  |   jqueryuiTheme: true,
  |   actions: {
  |     listAction: function(response, options){
  |       return {
  |         "Result": "OK",
  |         "Records": response.template
  |       };
  |     },
  |     createAction: function(postData) {
  |       var template = extract(postData);
  |       socket.emit('message', { method: "CREATE", uri: "templates/new", data: template });
  |       return {
  |         "Result": "OK",
  |         "Record": template
  |       }; 
  |     },
  |     updateAction: function(postData) {
  |       var template = extract(postData);
  |       socket.emit('message', { method: "UPDATE", uri: "templates/" + template._id, data: template });
  |       return {
  |         "Result": "OK"
  |       }
  |     },
  |     deleteAction: function(template){
  |       socket.emit('message', { method: "DELETE", uri: "templates/" + template._id, data: template });
  |       return {
  |         "Result": "OK"
  |       };
  |     }
  |   },
  |   fields: {
  |     _id: {
  |       key: true,
  |       list: false
  |     },
  |     title: {
  |       title: "Affiche"
  |     },
  |     date: {
  |       type: "date",
  |       title: "Date",
  |       displayFormat: "yy-mm-dd"
  |     }
  |   }
  | });
  | var ref2 = $( "#templates" );
  | var response2 = {};
  | socket.on('message', function(msg) {
  |   if ((msg.method == "UPDATE") && (msg.uri == "templates")) {
  |     console.log("[Template] received: " + JSON.stringify(msg));
  |     fixDate(msg.data);
  |     if (!response2.template) {
  |       response2.template = msg.data;
  |       ref2.jtable("load", response2);
  |     } else {
  |       response2.template = msg.data;
  |       ref2.jtable("reload");
  |     }
  |   }
  | });
  | // Utility
  | function extract(uri) {
  |   var data = {}, token;
  |   var pairs = uri.split("&");
  |   pairs.forEach( function(key) {
  |     token = key.split("=");
  |     data[token[0]] = unescape(token[1]);
  |   });
  |   return data;
  | }
  | // Fixing date
  | function fixDate(records) {
  |   records.forEach(function(record) {
  |     if (record.date) {
  |       record.date = "/Date(" + Date.parse(record.date) + ")/";
  |     }
  |   });
  | }
