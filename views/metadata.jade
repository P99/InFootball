div#metadata
  div#teams
  div#players

script
  | // Todo: pass the 'port' variable in the tube?
  | $( function() {
  | var socket = io( document.location.hostname + ':' + port + '/operator' );
  | var root = "";
  | $( "#teams" ).jtable({
  |   title: "Equipes",
  |   jqueryuiTheme: true,
  |   actions: {
  |     listAction: function(response, options) {
  |       return {
  |         "Result": "OK",
  |         "Records": response.team
  |       };
  |     },
  |     createAction: function(postData) {
  |       var team = extract(postData);
  |       socket.emit('message', { method: "CREATE", uri: "team/new", data: team });
  |       return {
  |         "Result": "OK",
  |         "Record": team
  |       };
  |     },
  |     updateAction: function(postData) {
  |       var team = extract(postData);
  |       socket.emit('message', { method: "UPDATE", uri: "team/" + team._id, data: team });
  |       return {
  |         "Result": "OK"
  |       };
  |     },
  |     deleteAction: function(team){
  |       socket.emit('message', { method: "DELETE", uri: "team/" + team._id, data: team });
  |       return {
  |         "Result": "OK"
  |       };
  |     }
  |   },
  |   fields: {
  |     _id: {
  |       key: true,
  |       list: false
  |     },
  |     logo: {
  |       title: "Logo",
  |       display: function(team) {
  |         return $('<img src="' + team.record.logo + '"></img>');
  |       }
  |     },
  |     name: {
  |       title: "Equipe"
  |     },
  |     coach: {
  |       title: "Entraineur"
  |     },
  |     president: {
  |       title: "President"
  |     },
  |     stadium: {
  |       title: "Stade"
  |     },
  |     player: {
  |       title: "Joueurs",
  |       edit: false,
  |       create: false,
  |       display: function(team) {
  |         var $button = $('<button />');
  |         $button.button({ 
  |           icons: { secondary: "ui-icon-triangle-1-e" },
  |           label: "edit"
  |         }).click(function() {
  |           console.log("Editing team/" + team.record._id + "/player/");
  |           root = "team/" + team.record._id + "/";
  |           $( "#teams" ).hide();
  |           $( "#players" ).jtable('option', 'title', "Equipes / " + team.record.name + " / Joueurs").show();
  |           socket.emit('message', { method: "READ", uri: root + "player", data: {} });
  |         });
  |         return $button;
  |       }
  |     }
  |   }
  | }); // End "#teams" jtable
  | //
  | $( "#players" ).jtable({
  |   title: "Joueurs",
  |   jqueryuiTheme: true,
  |   toolbar: {
  |     items: [{
  |       text: 'Back',
  |       click: function () {
  |           root = "";
  |           $( "#players" ).hide();
  |           $( "#teams" ).show();
  |       }
  |     }]
  |   },
  |   actions: {
  |     listAction: function(response, options) {
  |       return {
  |         "Result": "OK",
  |         "Records": response.player
  |       };
  |     },
  |     createAction: function(postData) {
  |       var model = extract(postData);
  |       socket.emit('message', { method: "CREATE", uri: root + "player/new", data: model });
  |       return {
  |         "Result": "OK",
  |         "Record": model
  |       };
  |     },
  |     updateAction: function(postData) {
  |       var model = extract(postData);
  |       socket.emit('message', { method: "UPDATE", uri: root + "player/" + model._id, data: model });
  |       return {
  |         "Result": "OK"
  |       };
  |     },
  |     deleteAction: function(model){
  |       socket.emit('message', { method: "DELETE", uri: root + "player/" + model._id, data: model });
  |       return {
  |         "Result": "OK"
  |       };
  |     }
  |   },
  |   fields: {
  |     _id: {
  |       key: true,
  |       list: false
  |     },
  |     photo: {
  |       title: "Photo",
  |       display: function(model) {
  |         return $('<img src="' + model.record.photo + '"></img>');
  |       }
  |     },
  |     name: {
  |       title: "Nom"
  |     },
  |     nationality: {
  |       title: "Pays"
  |     },
  |     age: {
  |       title: "Age"
  |     },
  |     position: {
  |       title: "Poste"
  |     },
  |     number: {
  |       title: "Maillot"
  |     }
  |   }
  | }).hide(); // End "#players" jtable
  | //
  | var team_ref = $( "#teams" );
  | var player_ref = $( "#players" );
  | var response = {};
  | socket.on('message', function(msg) {
  |   if ((msg.method == "UPDATE") && (msg.uri == "team")) {
  |     console.log("[Team] received: " + JSON.stringify(msg));
  |     if (!response.team) {
  |       response.team = msg.data;
  |       team_ref.jtable("load", response);
  |     } else {
  |       response.team = msg.data;
  |       team_ref.jtable("reload");
  |     }
  |   }
  |   else if ((msg.method =="UPDATE") && (msg.uri == (root + "player"))) {
  |     console.log("[Player] received: " + JSON.stringify(msg));
  |     if (!response.player) {
  |       response.player = msg.data;
  |       player_ref.jtable("load", response);
  |     } else {
  |       response.player = msg.data;
  |       player_ref.jtable("reload");
  |       console.log("Reload player");
  |     }
  |   }
  | });
  | //
  | //
  | // Utility
  | function extract(uri) {
  |   var data = {}, token;
  |   var pairs = uri.split("&");
  |   var decode = "";
  |   pairs.forEach( function(key) {
  |     token = key.split("=");
  |     data[token[0]] = token[1].replace("+", " ");
  |   });
  |   return data;
  | }
  | });